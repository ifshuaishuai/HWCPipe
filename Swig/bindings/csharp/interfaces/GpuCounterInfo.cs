//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace HWCPipe {

public class GpuCounterInfo : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal GpuCounterInfo(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(GpuCounterInfo obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~GpuCounterInfo() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HWCPipeAndroidPINVOKE.delete_GpuCounterInfo(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public SWIGTYPE_p_std__string desc {
    set {
      HWCPipeAndroidPINVOKE.GpuCounterInfo_desc_set(swigCPtr, SWIGTYPE_p_std__string.getCPtr(value));
      if (HWCPipeAndroidPINVOKE.SWIGPendingException.Pending) throw HWCPipeAndroidPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_std__string ret = new SWIGTYPE_p_std__string(HWCPipeAndroidPINVOKE.GpuCounterInfo_desc_get(swigCPtr), true);
      if (HWCPipeAndroidPINVOKE.SWIGPendingException.Pending) throw HWCPipeAndroidPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_std__string unit {
    set {
      HWCPipeAndroidPINVOKE.GpuCounterInfo_unit_set(swigCPtr, SWIGTYPE_p_std__string.getCPtr(value));
      if (HWCPipeAndroidPINVOKE.SWIGPendingException.Pending) throw HWCPipeAndroidPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_std__string ret = new SWIGTYPE_p_std__string(HWCPipeAndroidPINVOKE.GpuCounterInfo_unit_get(swigCPtr), true);
      if (HWCPipeAndroidPINVOKE.SWIGPendingException.Pending) throw HWCPipeAndroidPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public GpuCounterInfo() : this(HWCPipeAndroidPINVOKE.new_GpuCounterInfo(), true) {
  }

}

}
